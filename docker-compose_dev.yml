# Docker Compose for FastAPI with MongoDB and Nginx
# Development version
# with MongoExpress for database management
version: "3.8"
services:
  # api 
  api:
    build:
      context: backend
      dockerfile: Dockerfile
    container_name: api 
    restart: unless-stopped
    env_file: .env
    environment:
      MONGODB_DATABASE: "MedDict"
      MONGODB_USERNAME: "${MONGODB_USERNAME}"
      MONGODB_PASSWORD: "${MONGODB_PASSWORD}"
      MONGODB_HOSTNAME: "${MONGODB_HOSTNAME}"
    volumes:
      - ./data/images:/var/www/images:rw
      - ./data/sounds:/var/www/sounds:rw
    depends_on:
      - mongodb
    networks:
      - backend
    ports: 
      - 5000:5000
  
  web: 
    build: 
      context: frontend
      dockerfile: Dockerfile
    container_name: frontend
    restart: unless-stopped
    depends_on:
      - api
    networks:
      - frontend
    ports:
      - 3000:3000

  # MongoDB
  mongodb:
    image: mongo:4.0.8
    container_name: mongodb
    restart: unless-stopped 
    command: mongod --auth 
    # && mongoimport --host mongodb --db MedDict --collection dictionary --type json --file /data/database.json --jsonArray"
    env_file: .env
    environment:
      MONGO_INITDB_DATABASE: "MedDict"
      MONGO_INITDB_ROOT_USERNAME: "${MONGO_INITDB_ROOT_USERNAME}"
      MONGO_INITDB_ROOT_PASSWORD: "${MONGO_INITDB_ROOT_PASSWORD}"
      MONGODB_DATA_DIR: /data/db
      MONGODB_LOG_DIR: /dev/null
    volumes:
      - mongodbdata:/data/db
      - mongoconfigdb:/data/configdb
      - ./data/database.json:/data/database.json:ro
      - ./mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro
    networks:
      - backend
    ports:
      - '27017-27019:27017-27019'

  mongo-express: 
    image: mongo-express 
    container_name: mexpress
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: "${MONGO_INITDB_ROOT_USERNAME}"
      ME_CONFIG_MONGODB_ADMINPASSWORD: "${MONGO_INITDB_ROOT_PASSWORD}"
      # ME_CONFIG_MONGODB_URL: "mongodb://${MONGO_INITDB_ROOT_USERNAME}:${MONGO_INITDB_ROOT_PASSWORD}@mongodb:27017/?authSource=admin"
      ME_CONFIG_MONGODB_SERVER: mongodb
      ME_CONFIG_BASICAUTH_USERNAME: "${MEXPRESS_USERNAME}"
      ME_CONFIG_BASICAUTH_PASSWORD: "${MEXPRESS_PASSWORD}"
      ME_CONFIG_SITE_COOKIESECRET: "${MEXPRESS_COOKIESECRET}"
      ME_CONFIG_SITE_SESSIONSECRET: "${MEXPRESS_SESSIONSECRET}"
    networks:
      - backend 
    restart: unless-stopped 
    depends_on:
      - mongodb
    ports: 
      - 8081:8081

  # Nginx
  webserver:
    image: nginx:latest
    container_name: webserver
    restart: always
    volumes:
      - ./nginx/${PRODUCTION}.conf:/tmp/nginx.conf
      - ./certbot/conf/live/meddict-vinuni.com/fullchain.pem:/certificates/fullchain.pem:ro
      - ./certbot/conf/live/meddict-vinuni.com/privkey.pem:/certificates/privkey.pem:ro
    command: /bin/sh -c "envsubst < /tmp/nginx.conf > /etc/nginx/conf.d/default.conf && nginx -g 'daemon off;'" 
    ports:
      - 80:80
      - 443:443
    depends_on:
      - api
      - web
    networks:
      - frontend
      - backend

  certbot:
    image: certbot/certbot:latest 
    volumes: 
      - ./certbot/www/:/var/www/certbot:rw 
      - ./certbot/conf/:/etc/letsencrypt/:rw
      - letsencryptdata:/var/lib/letsencrypt
networks:
  frontend:
    driver: bridge 
    
  backend: 
    driver: bridge 

volumes:
  mongodbdata:
    driver: local 
  mongoconfigdb:
    driver: local
  appdata:
    driver: local 
  nginx: 
    driver: local 
  letsencryptdata:
    driver: local