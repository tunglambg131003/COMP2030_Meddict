# Docker Compose for Flask App with MongoDB and Nginx
version: '3'
services:
  # Flask 
  flask:
    build:
      context: backend
      dockerfile: Dockerfile
    container_name: flask 
    restart: unless-stopped
    env_file: .env
    environment:
      APP_ENV: "prod"
      APP_DEBUG: "False"
      APP_PORT: 5000
      MONGODB_DATABASE: "MedDict"
    volumes:
      - appdata:/var/www
    depends_on:
      - mongodb
    networks:
      - frontend
      - backend

  # MongoDB
  mongodb:
    image: mongo:4.0.8
    container_name: mongodb
    restart: unless-stopped 
    command: mongod --auth
    env_file: .env
    environment:
      MONGO_INITDB_DATABASE: "MedDict"
      MONGODB_DATA_DIR: /data/db
      MONGODB_LOG_DIR: /dev/null
    volumes:
      - mongodbdata:/data/db 
      - ./mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro
    networks:
      - backend
    ports:
      - '27017-27019:27017-27019'
  # Nginx
  webserver:
    image: nginx:latest
    container_name: webserver
    volumes:
      - ./nginx/app.conf:/tmp/nginx.conf
    environment: 
      - FLASK_SERVER_ADDR=flask:5000  
    command: /bin/sh -c "envsubst < /tmp/nginx.conf > /etc/nginx/conf.d/default.conf && nginx -g 'daemon off;'" 
    ports:
      - 80:80
      - 433:433
    depends_on:
      - flask
    networks:
      - frontend

networks:
  frontend:
    driver: bridge 
  backend:  
    driver: bridge 

volumes:
  mongodbdata:
    driver: local 
  appdata:
    driver: local 
  nginx: 
    driver: local 
