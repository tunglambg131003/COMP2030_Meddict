# Docker Compose for Flask App with MongoDB and Nginx
version: "3.8"
services:
  # Flask 
  api:
    build:
      context: backend
      dockerfile: Dockerfile
    container_name: api 
    restart: unless-stopped
    env_file: .env
    environment:
      APP_ENV: "prod"
      APP_DEBUG: "False"
      APP_PORT: 5000
      MONGODB_DATABASE: "MedDict"
      MONGODB_USERNAME: "${MONGODB_USERNAME}"
      MONGODB_PASSWORD: "${MONGODB_PASSWORD}"
      MONGODB_HOSTNAME: "${MONGODB_HOSTNAME}"
    volumes:
      - appdata:/var/www
      - ./data/images:/var/www/images
    depends_on:
      - mongodb
    networks:
      - frontend
      - backend

  # MongoDB
  mongodb:
    image: mongo:4.0.8
    container_name: mongodb
    restart: unless-stopped 
    command: mongod --auth 
    # && mongoimport --host mongodb --db MedDict --collection dictionary --type json --file /data/database.json --jsonArray"
    env_file: .env
    environment:
      MONGO_INITDB_DATABASE: "MedDict"
      MONGO_INITDB_ROOT_USERNAME: "${MONGO_INITDB_ROOT_USERNAME}"
      MONGO_INITDB_ROOT_PASSWORD: "${MONGO_INITDB_ROOT_PASSWORD}"
      MONGODB_DATA_DIR: /data/db
      MONGODB_LOG_DIR: /dev/null
    volumes:
      - ./data/database.json:/data/database.json:ro
      - mongodbdata:/data/db 
      - ./mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro
    networks:
      - backend
    ports:
      - '27017-27019:27017-27019'

  mongo-express: 
    image: mongo-express 
    container_name: mexpress
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: "${MONGO_INITDB_ROOT_USERNAME}"
      ME_CONFIG_MONGODB_ADMINPASSWORD: "${MONGO_INITDB_ROOT_PASSWORD}"
      # ME_CONFIG_MONGODB_URL: "mongodb://${MONGO_INITDB_ROOT_USERNAME}:${MONGO_INITDB_ROOT_PASSWORD}@mongodb:27017/?authSource=admin"
      ME_CONFIG_MONGODB_SERVER: mongodb
      ME_CONFIG_BASICAUTH_USERNAME: mexpress
      ME_CONFIG_BASICAUTH_PASSWORD: mexpress

    networks:
      - backend 
    restart: unless-stopped 
    depends_on:
      - mongodb
    ports: 
      - 8081:8081
    volumes:
      - ./data:/data/db

  # # Nginx
  # webserver:
  #   image: nginx:latest
  #   container_name: webserver
  #   volumes:
  #     - ./nginx/app.conf:/tmp/nginx.conf
  #   environment: 
  #     - FLASK_SERVER_ADDR=flask:5000  
  #   command: /bin/sh -c "envsubst < /tmp/nginx.conf > /etc/nginx/conf.d/default.conf && nginx -g 'daemon off;'" 
  #   ports:
  #     - 80:80
  #     - 433:433
  #   depends_on:
  #     - flask
  #   networks:
  #     - frontend

networks:
  frontend:
    driver: bridge 
    
  backend: 
    driver: bridge 

volumes:
  mongodbdata:
    driver: local 
  appdata:
    driver: local 
  nginx: 
    driver: local 
