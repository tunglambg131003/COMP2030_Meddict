version: '3'
services:

  flask:
    build:
      context: backend
      dockerfile: dockerfile
    container_name: flask 
    image: digitalocean.com/flask-python:3.6
    restart: unless-stopped
    env_file: .env
    environment:
      APP_ENV: "prod"
      APP_DEBUG: "False"
      APP_PORT: 5000
      MONGODB_DATABASE: "MedDict"
      MONGODB_USERNAME: "MedDict_backend"
    volumes:
      - appdata:/var/www
    depends_on:
      - mongodb
    networks:
      - frontend
      - backend

  mongodb:
    image: mongo:4.0.8
    container_name: mongodb
    restart: unless-stopped 
    command: mongod --auth
    env_file: .env
    environment:
      MONGO_INITDB_DATABASE: "MedDict"
      MONGODB_DATA_DIR: /data/db
      MONGODB_LOG_DIR: /dev/null
    volumes:
      - mongodbdata:/data/db 
    networks:
      - backend

  webserver:
    build:
      context: nginx
      dockerfile: Dockerfile
    image: nginx:1.15.12-alpine
    container_name: webserver
    restart: unless-stopped
    environment:
      APP_ENV: "prod"
      APP_NAME: "webserver"
      APP_DEBUG: "false"
      SERVICE_NAME: "webserver"
    ports:
      - "80:80"
      - "443:443"
    depends_on:
      - flask
    networks:
      - frontend

networks:
  frontend:
    driver: bridge 
  backend:  
    driver: bridge 

volumes:
  mongodbdata:
    driver: local 
  appdata:
    driver: local 
  nginx: 
    driver: local 
